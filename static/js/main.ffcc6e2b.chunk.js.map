{"version":3,"sources":["component/Firebase/context.js","component/Firebase/config.js","component/Firebase/Firebase.js","component/Firebase/index.js","component/dashboard/frame/poker-card/PokerCard.js","component/dashboard/frame/poker-card/Result.js","component/utils/mapCompare.js","component/utils/sessionStore.js","component/utils/firebaseDb.js","component/dashboard/frame/poker-card/AllCardsPanel.js","component/dashboard/frame/CardPanel.js","component/dashboard/frame/right-panel/TaskIdManager.js","component/dashboard/frame/right-panel/RightPanelActionCard.js","component/dashboard/frame/right-panel/team/TeamMember.js","component/utils/compareArrayObject.js","component/dashboard/frame/right-panel/team/Team.js","component/dashboard/frame/right-panel/RightPanelTeamStatusCard.js","component/dashboard/frame/RightSidePanel.js","component/dashboard/frame/HomePage.js","component/auth/styles.js","component/auth/SignIn.js","component/dashboard/Dashboard.js","component/dashboard/Copyright.js","component/auth/SignOut.js","component/header/Header.js","component/App.js","serviceWorker.js","index.js","component/dashboard/frame/poker-card/icon/infinity.svg"],"names":["React","createContext","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","database","firestore","PokerCard","props","state","value","storyPoint","style","getDisplayableValue","Card","Img","className","variant","src","infinity","alt","onClick","bind","this","id","Body","footer","Component","Result","currentUser","useState","Map","resultMap","setResultMap","useEffect","voteRef","collection","doc","team","data","observer","onSnapshot","console","log","members","window","location","href","process","forEach","m","member","set","map1","map2","testVal","size","key","val","get","undefined","has","compareMaps","err","CardDeck","flexDirection","marginTop","marginBottom","cards","k","v","push","width","height","background","color","fontWeight","toUpperCase","getAllCards","sessionStoreUserName","sessionStorage","getItem","getCurrentlyLoggedInUserDetails","userName","a","userRef","removeTasksOfTeam","getTaskForTeam","res","exists","createEmptyTaskForTeam","taskId","user","isOnline","merge","AllCardsPanel","cardValues","setCardValues","selectedSP","setSelectedSP","showResult","setShowResult","unsubscribe","snapshot","sp","docs","map","point","numeric","lockStoryPointCard","then","task","sort","b","element","disabled","CardPanel","TaskIdManager","role","setTaskId","taskInputDisabled","setTaskInputDisabled","TextField","margin","required","onChange","event","target","fullWidth","label","name","autoFocus","onKeyPress","charCode","preventDefault","placeholder","RightPanelActionCard","Title","Text","Button","block","catch","error","TeamMemberDetail","usr","onlineNotification","offlineNotification","Tooltip","title","placement","TeamMember","users","setUsers","tmp","filter","oldArr","newArr","length","result","o","n","rv","arrayObjectEquals","isActive","slice","Team","teamName","setTeamName","RightPanelTeamStatusCard","border","RightSidePanel","Container","propTypes","PropTypes","object","isRequired","HomePage","setCurrentUser","flexGrow","Row","styles","makeStyles","theme","paper","spacing","display","alignItems","avatar","backgroundColor","palette","secondary","main","form","submit","SignIn","setUserName","setUser","updateUserToOnline","classes","component","maxWidth","CssBaseline","Avatar","Typography","onSubmit","getAndSetUser","setItem","addUserNameToSessionStore","noValidate","autoComplete","type","memberSince","Dashboard","Copyright","align","Link","Date","getFullYear","signOut","logout","removeItem","unsetUser","e","useStyles","ul","padding","listStyle","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","link","fab","Header","loggedIn","AppBar","position","elevation","Toolbar","noWrap","clearSessionStore","Logout","arrow","IconButton","Fab","Profile","alert","App","Box","mt","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.ffcc6e2b.chunk.js","sourcesContent":["import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;\n","const config = {\n  apiKey: 'AIzaSyB7eDqSi97maZL5LjOSBrnbRUrqDVOKuVw',\n  authDomain: 'agile-poker-sk.firebaseapp.com',\n  databaseURL: 'https://agile-poker-sk.firebaseio.com',\n  projectId: 'agile-poker-sk',\n  storageBucket: 'agile-poker-sk.appspot.com',\n  messagingSenderId: '243041283381',\n  appId: '1:243041283381:web:59f749904068703030307c',\n  measurementId: 'G-PLT1CHSW9K',\n};\nexport default config;\n\n/*\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n\n  REACT_APP_API_KEY=AIzaSyB7eDqSi97maZL5LjOSBrnbRUrqDVOKuVw\n  REACT_APP_AUTH_DOMAIN=agile-poker-sk.firebaseapp.com\n  REACT_APP_DATABASE_URL=https://agile-poker-sk.firebaseio.com\n  REACT_APP_PROJECT_ID=agile-poker-sk\n  REACT_APP_STORAGE_BUCKET=agile-poker-sk.appspot.com\n  REACT_APP_MESSAGING_SENDER_ID=243041283381\n  REACT_APP_ID=1:243041283381:web:59f749904068703030307c\n  REACT_APP_MEASUREMENT_ID=G-PLT1CHSW9K\n  */\n","// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport firebase from 'firebase/app';\n\n// Add the Firebase services that you want to use\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport config from './config';\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth;\nexport const database = firebase.firestore();\n","/*\nFor a well-encapsulated Firebase module, we'll define a index.js file in our Firebase folder that exports all necessary functionalities (Firebase class, Firebase context for Consumer and Provider components):\n*/\n\nimport FirebaseContext from './context';\nimport { auth, database } from './Firebase';\n\nexport default database;\n\nexport { auth, FirebaseContext };\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nimport './card.css';\nimport infinity from './icon/infinity.svg';\n\nclass PokerCard extends Component {\n  state = {\n    value: {\n      storyPoint: this.props.value,\n      style: this.props.style,\n    },\n  };\n\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  getDisplayableValue = () => {\n    return this.state.value.storyPoint !== 'Infinity' ? (\n      this.state.value.storyPoint\n    ) : (\n      <Card.Img\n        className=\"pokerCard__infinity\"\n        variant=\"center\"\n        src={infinity}\n        alt=\"Infinity\"\n      />\n    );\n  };\n\n  onClick = (value) => {\n    this.props.onClick && this.props.onClick(value);\n  };\n\n  render() {\n    const storyPoint = this.getDisplayableValue();\n    const { value } = this.state;\n\n    return (\n      <div>\n        <Card\n          style={value.style}\n          className=\"m-2 pokerCard\"\n          id={value.storyPoint}\n          onClick={() => this.onClick(value.storyPoint)}\n        >\n          <Card.Body>\n            <h4>{storyPoint}</h4>\n          </Card.Body>\n          {this.props.footer && (\n            <p className=\"pokerCard__footer\">{this.props.footer}</p>\n          )}\n        </Card>\n      </div>\n    );\n  }\n}\n\nPokerCard.propTypes = {\n  value: PropTypes.string.isRequired,\n  style: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default PokerCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardDeck } from 'react-bootstrap';\n\nimport database from '../../../Firebase';\nimport PokerCard from './PokerCard';\nimport './cards.css';\nimport { compareMaps } from '../../../utils/mapCompare';\n\nconst Result = ({ currentUser }) => {\n  const [resultMap, setResultMap] = React.useState(new Map());\n\n  React.useEffect(() => {\n    const voteRef = database\n      .collection('result')\n      .doc(currentUser.team);\n\n    const data = new Map();\n\n    const observer = voteRef.onSnapshot(\n      (doc) => {\n        console.log(`Received query snapshot of ${doc.data()}`);\n\n        if (!doc.data().members) {\n          window.location.href = `${process.env.PUBLIC_URL}/`;\n        }\n\n        doc.data().members.forEach((m) => {\n          if (m.member && m.storyPoint) {\n            data.set(m.member, m.storyPoint);\n          }\n        });\n\n        if (!compareMaps(data, resultMap)) {\n          setResultMap(data);\n        }\n      },\n      (err) => {\n        console.log(`Encountered error: ${err}`);\n      },\n    );\n\n    return () => {\n      observer();\n    };\n  }, [resultMap, currentUser.team]);\n\n  const getStyle = () => {\n    return {\n      width: '10rem',\n      height: '15em',\n      //backgroundImage:  'linear-gradient(to bottom right, #add8e6, white)',\n      background: '#0047ab',\n      color: 'white',\n      fontWeight: 'bold',\n    };\n  };\n\n  const getAllCards = () => {\n    const cards = [];\n    resultMap.forEach((k, v) => {\n      console.log(k, v);\n      cards.push(\n        <PokerCard\n          key={v}\n          value={k}\n          style={getStyle()}\n          footer={v.toUpperCase()}\n        />,\n      );\n    });\n\n    return cards;\n  };\n\n  return (\n    <div>\n      {resultMap && resultMap.size > 0 && (\n        <CardDeck\n          className=\"cards noHover\"\n          style={{\n            flexDirection: 'row',\n            marginTop: '10px',\n            marginBottom: '20px',\n          }}\n        >\n          {getAllCards()}\n        </CardDeck>\n      )}\n    </div>\n  );\n};\n\nResult.propTypes = {\n  currentUser: PropTypes.object.isRequired,\n};\n\nexport default Result;\n","export const compareMaps = (map1, map2) => {\n  let testVal;\n  if (map1.size !== map2.size) {\n    return false;\n  }\n\n  for (const [key, val] of map1) {\n    testVal = map2.get(key);\n    // in cases of an undefined value, make sure the key\n    // actually exists on the object so there are no false positives\n    if (\n      testVal !== val ||\n      (testVal === undefined && !map2.has(key))\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","/**\n * get the user name store in sesson store\n */\nconst sessionStoreUserName = () =>\n  sessionStorage.getItem('agilePokerUserName') || '';\n\n/**\n * clears the user name store in session store\n */\nexport const sessionStoreClearUserName = () =>\n  sessionStorage.removeItem('agilePokerUserName');\n/**\n *\n * @param {*} userName sets this user name into the session store\n */\nexport const addUserNameToSessionStore = (userName) =>\n  sessionStorage.setItem('agilePokerUserName', userName);\n\nexport default sessionStoreUserName;\n","import database from '../Firebase';\nimport sessionStoreUserName from './sessionStore';\n\n/**\n * async function to get user data from firebase\n * @param {*} userName\n */\nconst getCurrentlyLoggedInUserDetails = async (userName) => {\n  //fallback\n  if (!userName) {\n    userName = sessionStoreUserName();\n  }\n\n  // Get user\n  const userRef = database.collection('users').doc(userName);\n  const doc = await userRef.get();\n\n  console.log('Currently Logged in User Result: ', doc.data());\n  return { ...doc.data() };\n};\n\n/**\n * remove all tasks from result by overwriting the existing info with empty\n * maybe delete the doc after this overwriting\n * @param {*} team name\n */\nconst removeTasksOfTeam = async (team) => {\n  console.log('Cleared Tasks for: ', team);\n\n  return await database.collection('result').doc(team).set({});\n};\n\n/**\n * the complete result for the team is returned - used to get the story points and memeber name\n * @param {*} team the team name as string\n */\nconst getTaskForTeam = async (team) => {\n  const res = await database.collection('result').doc(team).get();\n\n  if (res.exists) {\n    console.log(res.data());\n    return res.data();\n  }\n};\n\n/**\n * only get the changed task id immeditly\n * @param {*} team\n */\nconst getTaskIdForTeam = (team) => {\n  database\n    .collection('result')\n    .doc(team)\n    .onSnapshot(function (doc) {\n      return doc.data();\n    });\n};\n\n/**\n * init the team result document with two properties - taskid and empty member array\n * @param {*} team the team name\n * @param {*} taskId the task id for the teams\n */\nconst createEmptyTaskForTeam = async (team, taskId) => {\n  // Add a new document in collection \"result/task/users\" with ID 'userName'\n  const res = await database.collection('result').doc(team).set({\n    taskId: taskId,\n    members: [],\n  });\n\n  console.log('Stored Result: ', taskId, ' ', res);\n};\n\n/**\n * aysnc method to mark the currently active user offline\n * @param {*} user the username or primary key of firebase document\n */\nasync function unsetUser(user) {\n  const userRef = database.collection('users').doc(user);\n\n  // try printing the user data\n  // const doc = await userRef.get();\n  // if (!doc.exists) {\n  //   console.log('No such document!');\n  // } else {\n  //   console.log('Document data:', doc.data());\n  // }\n\n  return await userRef.set(\n    {\n      isOnline: false,\n    },\n    { merge: true },\n  );\n}\n\nexport {\n  getCurrentlyLoggedInUserDetails,\n  removeTasksOfTeam,\n  getTaskForTeam,\n  getTaskIdForTeam,\n  createEmptyTaskForTeam,\n  unsetUser,\n};\n","import React, { useState, useEffect } from 'react';\nimport { CardDeck } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nimport Result from './Result';\nimport PokerCard from './PokerCard';\nimport database from '../../../Firebase';\nimport './cards.css';\nimport { getTaskForTeam } from '../../../utils/firebaseDb';\n\nexport default function AllCardsPanel({ currentUser }) {\n  const [cardValues, setCardValues] = useState([]);\n  const [selectedSP, setSelectedSP] = useState(undefined);\n  const [showResult, setShowResult] = useState(false);\n\n  // cardValues: [1, 2, 3, 5, 8, 13, 20, Infinity],\n  // selectedSP: undefined,\n\n  useEffect(() => {\n    const unsubscribe = database\n      .collection('points')\n      .onSnapshot((snapshot) => {\n        const sp = snapshot.docs.map((point) => point.data().numeric);\n        setCardValues(sp[0]);\n      });\n\n    return () => {\n      // this is the cleanup of listeners\n      unsubscribe(); //it'll detach the listeners\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const lockStoryPointCard = (value) => {\n    setSelectedSP(value);\n\n    // Add a new document in collection \"result/task/users\" with ID 'userName'\n\n    getTaskForTeam(currentUser.team).then((task) => {\n      console.log(task);\n      if (task.taskId) {\n        // Add a new document in collection \"result/team/members(map)\" with ID 'userName'\n        database\n          .collection('result')\n          .doc(currentUser.team)\n          .set(\n            {\n              members: [\n                ...task.members,\n                { member: currentUser.userName, storyPoint: value },\n              ],\n            },\n            { merge: true },\n          )\n          .then(() => {\n            console.log('Stored Result of pokering');\n          });\n\n        setShowResult(true);\n        setCardValues([value]);\n      }\n    });\n  };\n\n  const getStyle = (value) => {\n    return {\n      width: '10rem',\n      height: '15em',\n      disabled: selectedSP !== value,\n    };\n  };\n\n  const getAllCards = () => {\n    const cards = [];\n\n    cardValues\n      .sort((a, b) => a - b)\n      .forEach((element) => {\n        cards.push(\n          <PokerCard\n            key={element}\n            value={element}\n            style={getStyle(element)}\n            onClick={lockStoryPointCard}\n          />,\n        );\n      });\n\n    return cards;\n  };\n\n  return (\n    <div>\n      {!showResult ? (\n        <CardDeck\n          className=\"cards\"\n          style={{\n            flexDirection: 'row',\n            marginTop: '10px',\n            marginBottom: '20px',\n          }}\n        >\n          {getAllCards()}\n        </CardDeck>\n      ) : (\n        <Result currentUser={currentUser} />\n      )}\n    </div>\n  );\n}\n\nAllCardsPanel.propTypes = {\n  currentUser: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AllCardsPanel from './poker-card/AllCardsPanel';\n\nexport default function CardPanel({ currentUser }) {\n  return (\n    <div>\n      <AllCardsPanel currentUser={currentUser} />\n    </div>\n  );\n}\n\nCardPanel.propTypes = {\n  currentUser: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '@material-ui/core';\n\nimport { createEmptyTaskForTeam } from '../../../utils/firebaseDb';\nimport database from '../../../Firebase';\n\nconst TaskIdManager = ({ team, role }) => {\n  const [taskId, setTaskId] = React.useState();\n\n  const [taskInputDisabled, setTaskInputDisabled] = React.useState(\n    role === 'TEAM MEMBER',\n  );\n\n  const onChange = (event) => {\n    setTaskId(event.target.value);\n  };\n\n  React.useEffect(() => {\n    const unsubscribe = database\n      .collection('result')\n      .doc(team)\n      .onSnapshot((doc) => {\n        if (doc.data().taskId) {\n          setTaskId(doc.data().taskId.toUpperCase());\n          setTaskInputDisabled(true);\n        }\n      });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [taskId, team]);\n\n  /**\n   * The PO or SM have powers to enter the task id which is required for voting\n   * just to ensure better UX - only do it on ENTER press\n   * @param {*} event\n   */\n  const onTaskEnter = (event) => {\n    // if enter is not pressed don't do anything\n    if (event.charCode !== 13) {\n      return;\n    }\n\n    event.preventDefault();\n\n    const task = event.target.value;\n    // store to db\n    createEmptyTaskForTeam(team, task);\n    //refresh the ui\n    setTaskInputDisabled(true);\n    setTaskId(task.toUpperCase());\n  };\n\n  return (\n    <div>\n      {taskInputDisabled ? (\n        <h2 className=\"text-center\" style={{ color: 'turquoise' }}>\n          {taskId}\n        </h2>\n      ) : (\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          onChange={onChange}\n          fullWidth\n          id=\"taskId\"\n          label=\"Task Id\"\n          name=\"taskId\"\n          autoFocus\n          //disabled={taskInputDisabled}\n          onKeyPress={onTaskEnter}\n          placeholder={taskId}\n        />\n      )}\n    </div>\n  );\n};\n\nTaskIdManager.propTypes = {\n  team: PropTypes.string.isRequired,\n  role: PropTypes.string.isRequired,\n};\n\nexport default TaskIdManager;\n","import React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nimport './RighSideCard.css';\nimport { removeTasksOfTeam } from '../../../utils/firebaseDb';\nimport TaskIdManager from './TaskIdManager';\n\nconst RightPanelActionCard = ({ currentUser, style }) => {\n  const reset = () => {\n    removeTasksOfTeam(currentUser.team, '')\n      .then(() => {\n        window.location.href = `${process.env.PUBLIC_URL}/`;\n        console.log('Document successfully deleted!');\n      })\n      .catch((error) => {\n        console.error('Error removing document: ', error);\n      });\n  };\n\n  return (\n    <Card className=\"rightCard\" style={style}>\n      <Card.Body>\n        <Card.Title className=\"title\">Poker</Card.Title>\n\n        <Card.Text className=\"text\">\n          {currentUser.userName.toUpperCase()}\n        </Card.Text>\n\n        <p className=\"text\">\n          {currentUser.role\n            ? currentUser.role.toUpperCase()\n            : 'TEAM MEMBER'}\n        </p>\n\n        <TaskIdManager\n          team={currentUser.team}\n          role={currentUser.role.toUpperCase()}\n        />\n\n        {(currentUser.role.toUpperCase() === 'SCRUM MASTER' ||\n          currentUser.role.toUpperCase() === 'PRODUCT OWNER') && (\n          <div>\n            {' '}\n            <Button block onClick={() => reset()} variant=\"Link\">\n              Reset\n            </Button>\n          </div>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nRightPanelActionCard.propTypes = {\n  currentUser: PropTypes.object.isRequired,\n  style: PropTypes.object.isRequired,\n};\n\nexport default RightPanelActionCard;\n","import React, { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport ImportantDevicesIcon from '@material-ui/icons/ImportantDevices';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport { Tooltip } from '@material-ui/core';\nimport database from '../../../../Firebase';\nimport './TeamMember.css';\nimport { arrayObjectEquals } from '../../../../utils/compareArrayObject';\n\nconst TeamMemberDetail = ({ usr }) => {\n  return (\n    <div className=\"teamMember\">\n      <div className=\"teamMember__details\">\n        <p className=\"text-capitalize\">{usr.userName}</p>\n        <span>\n          {usr.isOnline\n            ? onlineNotification()\n            : offlineNotification()}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nTeamMemberDetail.propTypes = {\n  usr: PropTypes.object.isRequired,\n};\n\nconst offlineNotification = () => {\n  return (\n    <Tooltip title=\"offline\" placement=\"right-start\">\n      <NotInterestedIcon className=\"teamMember__offline\" />\n    </Tooltip>\n  );\n};\n\nconst onlineNotification = () => {\n  return (\n    <Tooltip title=\"connected\" placement=\"right-start\">\n      <ImportantDevicesIcon className=\"teamMember__online\" />\n    </Tooltip>\n  );\n};\n\nexport default function TeamMember({ team }) {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    const tmp = [];\n\n    const unsubscribe = database\n      .collection('users')\n      .onSnapshot((snapshot) => {\n        snapshot.docs\n          .map((point) => point.data())\n          .filter((doc) => doc.team.toUpperCase() === team)\n          .forEach((doc) => {\n            // add all data to an array - TODO sometmes double entries are loaded here\n            tmp.push(doc);\n          });\n\n        if ((!users && tmp) || !arrayObjectEquals(users, tmp)) {\n          console.log(users, '=>', tmp);\n          setUsers(tmp);\n        }\n      });\n\n    return () => {\n      // this is the cleanup of listeners\n      unsubscribe(); //it'll detach the listeners\n    };\n  }, [users, team]);\n\n  return (\n    <div>\n      {users\n        .filter(\n          (usr) => usr.isActive && usr.team.toUpperCase() === team,\n        )\n        .slice(0, 7) // max 7 users visible on side pane\n        // .filter((usr) => usr.team === getUserName)\n        .map((usr) => (\n          <TeamMemberDetail key={usr.userName} usr={usr} />\n        ))}\n    </div>\n  );\n}\n\nTeamMember.propTypes = {\n  team: PropTypes.string.isRequired,\n};\n","export const arrayObjectEquals = (oldArr, newArr) => {\n  if (oldArr.length !== newArr.length) {\n    return false;\n  }\n\n  let result = true;\n\n  oldArr.forEach((o) => {\n    newArr.forEach((n) => {\n      let rv = true;\n      if (o.userName === n.userName) {\n        rv = rv && n['isOnline'] === o['isOnline'];\n        if (!rv) {\n          console.log(\n            'isOnline',\n            ' ',\n            n['isOnline'],\n            ' ',\n            o['isOnline'],\n          );\n        }\n      }\n\n      result = result && rv;\n    });\n  });\n\n  return result;\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport TeamMember from './TeamMember';\n\nimport './Team.css';\nimport { getCurrentlyLoggedInUserDetails } from '../../../../utils/firebaseDb';\n\nconst Team = ({ className }) => {\n  const [teamName, setTeamName] = useState();\n\n  useEffect(() => {\n    const getTeam = () =>\n      getCurrentlyLoggedInUserDetails().then((usr) =>\n        setTeamName(usr.team.toUpperCase()),\n      );\n\n    if (!teamName) {\n      getTeam();\n    }\n  }, [teamName]);\n\n  return (\n    <div>\n      {teamName && (\n        <div className=\"team\">\n          <div className=\"mb-2 team__title\">\n            <h5\n              className={className}\n            >{`${teamName.toUpperCase()}`}</h5>\n          </div>\n\n          <TeamMember team={teamName} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nTeam.propTypes = {\n  className: PropTypes.string.isRequired,\n};\n\nexport default Team;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nimport Team from './team/Team';\nimport './RighSideCard.css';\n\nconst RightPanelTeamStatusCard = ({ style }) => {\n  return (\n    <Card className=\"rightCard teamCard\" style={style}>\n      <Card.Body>\n        <Team className=\"title\" />\n      </Card.Body>\n    </Card>\n  );\n};\n\nRightPanelTeamStatusCard.propTypes = {\n  style: PropTypes.object.isRequired,\n};\n\nexport default RightPanelTeamStatusCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from 'react-bootstrap';\n\nimport RightPanelActionCard from './right-panel/RightPanelActionCard';\nimport RightPanelTeamStatusCard from './right-panel/RightPanelTeamStatusCard';\n\nconst style = { border: 'none' };\n\nexport default function RightSidePanel({ currentUser }) {\n  return (\n    <div>\n      {currentUser && (\n        <Container className=\"justify-content-center\">\n          <RightPanelActionCard\n            currentUser={currentUser}\n            style={style}\n          />\n          <RightPanelTeamStatusCard style={style} />\n        </Container>\n      )}\n    </div>\n  );\n}\n\nRightSidePanel.propTypes = {\n  currentUser: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Row } from 'react-bootstrap';\n\nimport CardPanel from './CardPanel';\nimport RightSidePanel from './RightSidePanel';\nimport { getCurrentlyLoggedInUserDetails } from '../../utils/firebaseDb';\n\nconst HomePage = ({ userName }) => {\n  const [currentUser, setCurrentUser] = React.useState();\n\n  React.useEffect(() => {\n    const getCurrentUser = () => {\n      getCurrentlyLoggedInUserDetails(userName).then((usr) =>\n        setCurrentUser(usr),\n      );\n    };\n\n    if (!currentUser) {\n      getCurrentUser();\n    }\n  }, [currentUser, userName]);\n\n  return (\n    <div\n      className=\"container-md content-justify-center-sm\"\n      style={{ flexGrow: 3 }}\n    >\n      <Row>\n        <div className=\"col-sm-9\">\n          <CardPanel currentUser={currentUser}/>\n        </div>\n        <div className=\"col-md\">\n          <RightSidePanel currentUser={currentUser} />\n        </div>\n      </Row>\n    </div>\n  );\n};\n\n\nCardPanel.propTypes = {\n  userName: PropTypes.object.isRequired,\n};\n\n\nexport default HomePage;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default styles;\n","import React from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nimport styles from './styles';\n\nimport database from '../Firebase';\nimport { addUserNameToSessionStore } from '../utils/sessionStore';\n\nexport default function SignIn() {\n  const [userName, setUserName] = React.useState(undefined);\n\n  const onChange = (event) => {\n    setUserName(event.target.value);\n  };\n\n  /**\n   * async method to fetch the user from firebase\n   * and if found set it to be online and active\n   */\n  async function getAndSetUser() {\n    const userRef = database.collection('users').doc(userName);\n    const doc = await userRef.get();\n\n    if (doc.exists) {\n      setUser(doc.data());\n    }\n  }\n\n  /**\n   * aysnc method to update the firebae document with the actived and online user\n   * @param {*} doc the firebase document\n   */\n  const setUser = async (doc) => {\n    const data = updateUserToOnline(doc);\n\n    // Add a new document in collection \"cities\" with ID 'LA'\n    const res = await database\n      .collection('users')\n      .doc(userName)\n      .set(data);\n\n    console.log('Set logged in user: ', res);\n    // allow refreshing the page - and since our update was sucessful - we wil see home page\n    window.location.href = `${process.env.PUBLIC_URL}/`;\n  };\n\n  /**\n   * handles the form submission from the sign in screen\n   * @param {*} event\n   */\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    if (!!userName) {\n      getAndSetUser();\n\n      addUserNameToSessionStore(userName);\n    }\n  };\n\n  /**\n   * material ui classes for sign in screen\n   */\n  const classes = styles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Agile Poker Table\n        </Typography>\n        <form className={classes.form} onSubmit={onSubmit} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            onChange={onChange}\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"userName\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Enter\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\n/**\n * Updates the doc to be online and active\n * @param {*} doc\n */\nexport const updateUserToOnline = (doc) => {\n  return {\n    userName: doc.userName,\n    isOnline: true,\n    isActive: true,\n    memberSince: doc.memberSince,\n    team: doc.team,\n    role: doc.role,\n  };\n};\n","import React from 'react';\nimport HomePage from './frame/HomePage';\nimport sessionStoreUserName from '../utils/sessionStore';\nimport SignIn from '../auth/SignIn';\n\nexport default function Dashboard() {\n  const userName = sessionStoreUserName();\n\n  return (\n    <div>\n      {userName ? <HomePage userName={userName} /> : <SignIn />}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport default function Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://github.com/saurabhpro/\">\n        Saurabh\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n","import sessionStoreUserName, {\n  sessionStoreClearUserName,\n} from '../utils/sessionStore';\n\nimport { unsetUser } from '../utils/firebaseDb';\n\nexport default function signOut() {\n  const userName = sessionStoreUserName();\n  logout(userName);\n  sessionStoreClearUserName();\n}\n\nconst logout = (userName) => {\n  unsetUser(userName)\n    .then(() => {\n      console.log('logging out');\n      // allow refreshing the page - and since our update was sucessfull - we will see home page\n      window.location.href = `${process.env.PUBLIC_URL}/`;\n    })\n    .catch((e) => {\n      console.error(e);\n    });\n};\n","import React from 'react';\n\nimport {\n  IconButton,\n  AppBar,\n  Toolbar,\n  Typography,\n  Fab,\n  Tooltip,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport sessionStoreUserName from '../utils/sessionStore';\nimport signOut from '../auth/SignOut';\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n    //backgroundColor: '#ffac81',\n    //backgroundImage:'linear-gradient(315deg, #fff 75%, #ff928b 74%)',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  fab: {\n    height: '3em',\n    width: '3em',\n  },\n}));\n\n/**\n * Header Component\n *\n */\nconst Header = () => {\n  const classes = useStyles();\n\n  const [user, setUser] = React.useState(sessionStoreUserName());\n\n  /**\n   * clears the session store and then href\n   */\n  const clearSessionStore = () => {\n    signOut();\n    setUser(undefined);\n  };\n\n  const loggedIn = !!user;\n\n  return (\n    <div>\n      <AppBar\n        position=\"static\"\n        color=\"default\"\n        elevation={0}\n        className={classes.appBar}\n      >\n        <Toolbar className={classes.toolbar}>\n          <Typography\n            variant=\"h6\"\n            color=\"light\"\n            noWrap\n            className={classes.toolbarTitle}\n          >\n            Agile Poker\n          </Typography>\n          <nav>\n            {\n              //   <Link\n              //   variant=\"button\"\n              //   color=\"textPrimary\"\n              //   href=\"#\"\n              //   className={classes.link}\n              // >\n              //   Support\n              // </Link>\n            }\n          </nav>\n          {loggedIn && (\n            <div>\n              <Profile classes={classes} />\n              <Logout\n                classes={classes}\n                clearSessionStore={clearSessionStore}\n              />\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n\nconst Logout = ({ classes, clearSessionStore }) => {\n  return (\n    <Tooltip title=\"Logout\" arrow>\n      <IconButton\n        //href={`${process.env.PUBLIC_URL}/`}\n        onClick={() => clearSessionStore()}\n      >\n        <Fab color=\"secondary\" className={classes.fab}>\n          <ExitToAppIcon />\n        </Fab>\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nconst Profile = ({ classes }) => {\n  return (\n    <Tooltip title=\"Profile\" arrow>\n      <Fab\n        color=\"primary\"\n        className={classes.fab}\n        onClick={() => alert('you found a hidden feature ;)')}\n      >\n        <AccountCircleIcon />\n      </Fab>\n    </Tooltip>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Dashboard from './dashboard/Dashboard';\nimport { Box } from '@material-ui/core';\nimport Copyright from './dashboard/Copyright';\nimport Header from './header/Header';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header>\n        <Header />\n      </header>\n\n      <Dashboard />\n\n      <footer>\n        <Box mt={8}>\n          <Copyright />\n        </Box>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/infinity.cf7b1a96.svg\";"],"sourceRoot":""}