{"version":3,"sources":["component/dashboard/signin/styles.js","component/Firebase/context.js","component/Firebase/config.js","component/Firebase/Firebase.js","component/Firebase/index.js","component/dashboard/signin/SignIn.js","component/dashboard/HomePage.js","component/poker-card/PokerCard.js","component/poker-card/AllCardsPanel.js","component/dashboard/frame/CardPanel.js","component/utils/sessionStore.js","component/dashboard/team/TeamMember.js","component/dashboard/team/Team.js","component/dashboard/frame/RightSidePanel.js","component/dashboard/Landing.js","component/dashboard/Dashboard.js","component/dashboard/Copyright.js","component/dashboard/signin/SignOut.js","component/header/Header.js","component/App.js","serviceWorker.js","index.js","component/icon/infinity.svg"],"names":["styles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","React","createContext","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","database","firestore","SignIn","useState","undefined","userName","setUserName","a","userRef","collection","doc","get","exists","setUser","data","isOnline","isActive","memberSince","team","set","res","sessionStorage","setItem","console","log","window","location","href","process","classes","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","onSubmit","event","preventDefault","getAndSetUser","noValidate","TextField","required","onChange","target","value","fullWidth","id","label","name","autoComplete","autoFocus","Button","type","color","HomePage","PokerCard","props","state","storyPoint","style","getDisplayableValue","Card","Img","src","infinity","alt","onClick","bind","storePoint","this","Body","Component","AllCardsPanel","cardValues","setCardValues","selectedSP","setSelectedSP","useEffect","unsubscribe","onSnapshot","snapshot","sp","docs","map","point","numeric","lockStoryPointCard","CardDeck","marginBottom","cards","sort","b","forEach","element","push","key","height","disabled","getAllCards","CardPanel","sessionStoreUserName","getItem","TeamMember","users","setUsers","tmp","filter","toUpperCase","oldArr","newArr","length","result","o","n","rv","ArrayObjectEquals","usr","slice","TeamMemberDetail","Tooltip","title","placement","Team","teamName","setTeamName","then","querySnapshot","border","RightSidePanel","Title","Text","block","Landing","flexGrow","Row","Dashboard","Copyright","align","Link","Date","getFullYear","signOut","removeItem","unsetUser","user","merge","useStyles","ul","padding","listStyle","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","link","fab","Header","loggedIn","AppBar","position","elevation","Toolbar","noWrap","arrow","IconButton","Fab","App","Box","mt","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.d49d844e.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default styles;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;\n","const config = {\n  apiKey: 'AIzaSyB7eDqSi97maZL5LjOSBrnbRUrqDVOKuVw',\n  authDomain: 'agile-poker-sk.firebaseapp.com',\n  databaseURL: 'https://agile-poker-sk.firebaseio.com',\n  projectId: 'agile-poker-sk',\n  storageBucket: 'agile-poker-sk.appspot.com',\n  messagingSenderId: '243041283381',\n  appId: '1:243041283381:web:59f749904068703030307c',\n  measurementId: 'G-PLT1CHSW9K',\n};\nexport default config;\n","// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport firebase from 'firebase/app';\n\n// Add the Firebase services that you want to use\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport config from './config';\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth;\nexport const database = firebase.firestore();\n","/*\nFor a well-encapsulated Firebase module, we'll define a index.js file in our Firebase folder that exports all necessary functionalities (Firebase class, Firebase context for Consumer and Provider components):\n*/\n\nimport FirebaseContext from './context';\nimport { auth, database } from './Firebase';\n\nexport default database;\n\nexport { auth, FirebaseContext };\n","import React from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nimport styles from './styles';\n\nimport database from '../../Firebase';\n\nexport default function SignIn() {\n  const [userName, setUserName] = React.useState(undefined);\n\n  const onChange = (event) => {\n    setUserName(event.target.value);\n  };\n\n  async function getAndSetUser() {\n    // [START getAndSetUser]\n    const userRef = database.collection('users').doc(userName);\n    const doc = await userRef.get();\n\n    if (doc.exists) {\n      setUser(doc.data());\n    }\n    // [END getAndSetUser]\n  }\n\n  async function setUser(doc) {\n    // [START set_document]\n    const data = {\n      userName: doc.userName,\n      isOnline: true,\n      isActive: true,\n      memberSince: doc.memberSince,\n      team: doc.team,\n    };\n\n    // Add a new document in collection \"cities\" with ID 'LA'\n    const res = await database\n      .collection('users')\n      .doc(userName)\n      .set(data);\n    // [END set_document]\n\n    sessionStorage.setItem('agilePokerUserName', userName);\n\n    console.log('Set: ', res);\n    // allow refreshing the page - and since our update was sucessful - we wil see home page\n    window.location.href = `${process.env.PUBLIC_URL}/`;\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    if (!!userName) {\n      getAndSetUser();\n    }\n  };\n\n  const classes = styles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Agile Poker Table\n        </Typography>\n        <form className={classes.form} onSubmit={onSubmit} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            onChange={onChange}\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"userName\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Enter\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","import React from 'react';\n\nimport SignIn from './signin/SignIn';\n\nexport default function HomePage() {\n  return (\n    <div>\n      <SignIn />\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport PropTypes from 'prop-types';\n\nimport './PokerCard.css';\nimport infinity from '../icon/infinity.svg';\n\nclass PokerCard extends Component {\n  state = {\n    value: {\n      storyPoint: this.props.value,\n      style: this.props.style,\n    },\n  };\n\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  getDisplayableValue = () => {\n    return this.state.value.storyPoint !== 'Infinity' ? (\n      this.state.value.storyPoint\n    ) : (\n      <Card.Img variant=\"center\" src={infinity} alt=\"Infinity\" />\n    );\n  };\n\n  onClick = (value) => {\n    this.props.onClick(value);\n  };\n\n  render() {\n    const storePoint = this.getDisplayableValue();\n    const { value } = this.state;\n\n    return (\n      <div>\n        <Card\n          style={value.style}\n          className=\"m-1 pokerCard\"\n          id={value.storyPoint}\n          onClick={() => this.onClick(value.storyPoint)}\n        >\n          <Card.Body>\n            <h4>{storePoint}</h4>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nPokerCard.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default PokerCard;\n","import React, { useState, useEffect } from 'react';\nimport { CardDeck } from 'react-bootstrap';\n\nimport PokerCard from './PokerCard';\n\nimport database from '../Firebase';\n\nexport default function AllCardsPanel() {\n  const [cardValues, setCardValues] = useState([]);\n  const [selectedSP, setSelectedSP] = useState(undefined);\n\n  // cardValues: [1, 2, 3, 5, 8, 13, 20, Infinity],\n  // selectedSP: undefined,\n\n  useEffect(() => {\n    const unsubscribe = database\n      .collection('points')\n      .onSnapshot((snapshot) => {\n        const sp = snapshot.docs.map((point) => point.data().numeric);\n        setCardValues(sp[0]);\n      });\n\n    return () => {\n      // this is the cleanup of listeners\n      unsubscribe(); //it'll detach the listeners\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const lockStoryPointCard = (value) => {\n    setSelectedSP(value);\n    setCardValues([value]);\n  };\n\n  const getStyle = (value) => {\n    return {\n      width: '10rem',\n      height: '15em',\n      disabled: selectedSP !== value,\n    };\n  };\n\n  const getAllCards = () => {\n    const cards = [];\n    //console.log(cardValues);\n\n    cardValues\n      .sort((a, b) => a - b)\n      .forEach((element) => {\n        cards.push(\n          <PokerCard\n            key={element}\n            value={element}\n            style={getStyle(element)}\n            onClick={lockStoryPointCard}\n          />,\n        );\n      });\n\n    return cards;\n  };\n\n  return (\n    <CardDeck\n      style={{\n        flexDirection: 'row',\n        marginTop: '10px',\n        marginBottom: '20px',\n      }}\n    >\n      {getAllCards()}\n    </CardDeck>\n  );\n}\n","import React from 'react';\nimport AllCardsPanel from '../../poker-card/AllCardsPanel';\n\nexport default function CardPanel() {\n  return (\n    <div>\n      <AllCardsPanel />\n    </div>\n  );\n}\n","const sessionStoreUserName = () =>\n  sessionStorage.getItem('agilePokerUserName') || '';\n\nexport const sessionStoreClearUserName = () =>\n  sessionStorage.removeItem('agilePokerUserName');\n\nexport default sessionStoreUserName;\n","import React, { useState, useEffect } from 'react';\n\nimport ImportantDevicesIcon from '@material-ui/icons/ImportantDevices';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { Tooltip } from '@material-ui/core';\n\nimport database from '../../Firebase';\n\nimport './TeamMember.css';\n\nexport default function TeamMember({ team }) {\n  const [users, setUsers] = useState([]);\n\n  const ArrayObjectEquals = (oldArr, newArr) => {\n    if (oldArr.length !== newArr.length) {\n      return false;\n    }\n\n    let result = true;\n\n    oldArr.forEach((o) => {\n      newArr.forEach((n) => {\n        let rv = true;\n        if (o.userName === n.userName) {\n          rv = rv && n['isOnline'] === o['isOnline'];\n          if (!rv) {\n            console.log(\n              'isOnline',\n              ' ',\n              n['isOnline'],\n              ' ',\n              o['isOnline'],\n            );\n          }\n        }\n\n        result = result && rv;\n      });\n    });\n\n    return result;\n  };\n\n  useEffect(() => {\n    const tmp = [];\n\n    const unsubscribe = database\n      .collection('users')\n      .onSnapshot((snapshot) => {\n        snapshot.docs\n          .map((point) => point.data())\n          .filter((doc) => doc.team.toUpperCase() === team)\n          .forEach((doc) => {\n            // add all data to an array - TODO sometmes double entries are loaded here\n            tmp.push(doc);\n          });\n\n        if ((!users && tmp) || !ArrayObjectEquals(users, tmp)) {\n          console.log(users, '=>', tmp);\n          setUsers(tmp);\n        }\n      });\n\n    return () => {\n      // this is the cleanup of listeners\n      unsubscribe(); //it'll detach the listeners\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [users]);\n\n  return (\n    <div>\n      {users\n        .filter(\n          (usr) => usr.isActive && usr.team.toUpperCase() === team,\n        )\n        .slice(0, 7)\n        // .filter((usr) => usr.team === getUserName)\n        .map((usr) => (\n          <TeamMemberDetail key={usr.userName} usr={usr} />\n        ))}\n    </div>\n  );\n}\n\nfunction TeamMemberDetail({ usr }) {\n  return (\n    <div className=\"teamMember\">\n      <div className=\"teamMember__details\">\n        <p>{usr.userName.toUpperCase()}</p>\n        <span>\n          {usr.isOnline ? (\n            <Tooltip title=\"connected\" placement=\"right-start\">\n              <ImportantDevicesIcon className=\"teamMember__online\" />\n            </Tooltip>\n          ) : (\n            <Tooltip title=\"offline\" placement=\"right-start\">\n              <NotInterestedIcon className=\"teamMember__offline\" />\n            </Tooltip>\n          )}\n        </span>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nimport database from '../../Firebase';\nimport sessionStoreUserName from '../../utils/sessionStore';\nimport TeamMember from './TeamMember';\n\nimport './Team.css';\n\nconst Team = ({ className }) => {\n  const userName = sessionStoreUserName();\n  const [teamName, setTeamName] = useState(undefined);\n\n  useEffect(() => {\n    let team = undefined;\n    database\n      .collection('users')\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          // // doc.data() is never undefined for query doc snapshots\n          //console.log(doc.id, ' => ', doc.data());\n          if (!teamName && doc.id === userName) {\n            team = doc.data().team.toUpperCase();\n          }\n        });\n      })\n      .then(() => !teamName && setTeamName(team));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [teamName]);\n\n  return (\n    <div>\n      {teamName && (\n        <div className=\"team\">\n          <div className=\"team__title\">\n            <h5\n              className={className}\n            >{`${teamName.toUpperCase()}`}</h5>\n          </div>\n          <TeamMember team={teamName} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nTeam.propTypes = {};\n\nexport default Team;\n","import React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { Container } from 'react-bootstrap';\n\nimport Team from '../team/Team';\nimport './RighSideCard.css';\n\nconst style = { border: 'none' };\n\nexport default function RightSidePanel({ userName }) {\n  return (\n    <div>\n      <Container>\n        <Card className=\"rightCard\" style={style}>\n          <Card.Body>\n            <Card.Title className=\"title\">Poker</Card.Title>\n            <Card.Text className=\"text\">{userName}</Card.Text>\n            <p className=\"text\">Scrum Master</p>\n            <Button\n              block\n              onClick={() => {\n                window.location.href = `${process.env.PUBLIC_URL}/`;\n              }}\n              variant=\"Link\"\n            >\n              Reset\n            </Button>\n          </Card.Body>\n        </Card>\n\n        <Card className=\"rightCard teamCard\" style={style}>\n          <Card.Body>\n            <Team className=\"title\" />\n          </Card.Body>\n        </Card>\n      </Container>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { Row } from 'react-bootstrap';\n\nimport CardPanel from './frame/CardPanel';\nimport RightSidePanel from './frame/RightSidePanel';\n\nconst Landing = ({ userName }) => {\n  return (\n    <div\n      className=\"container-md content-justify-center-sm\"\n      style={{ flexGrow: 3 }}\n    >\n      <Row>\n        <div className=\"col-sm-9\">\n          <CardPanel />\n        </div>\n        <div className=\"col-md\">\n          <RightSidePanel userName={userName} />\n        </div>\n      </Row>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\nimport HomePage from './HomePage';\nimport Landing from './Landing';\nimport sessionStoreUserName from '../utils/sessionStore';\n\nexport default function Dashboard() {\n  const userName = sessionStoreUserName();\n\n  return (\n    <div>\n      {!userName && <HomePage />}\n\n      {userName && (\n        <div>\n          <Landing userName={userName} />\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport default function Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://github.com/saurabhpro/\">\n        Saurabh\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n","import sessionStoreUserName, {\n  sessionStoreClearUserName,\n} from '../../utils/sessionStore';\n\nimport database from '../../Firebase';\n\nexport default function signOut() {\n  const userName = sessionStoreUserName();\n  sessionStoreClearUserName();\n\n  unsetUser(userName);\n}\n\nasync function unsetUser(user) {\n  // [START set_document]\n\n  const userRef = database.collection('users').doc(user);\n\n  try {\n    // try printing the user data\n    // const doc = await userRef.get();\n    // if (!doc.exists) {\n    //   console.log('No such document!');\n    // } else {\n    //   console.log('Document data:', doc.data());\n    // }\n\n    const res = await userRef.set(\n      {\n        isOnline: false,\n      },\n      { merge: true },\n    );\n    // [END set_document]\n\n    console.log('Set: ', res);\n\n    // allow refreshing the page - and since our update was sucessful - we wil see home page\n    window.location.href = `${process.env.PUBLIC_URL}/`;\n  } catch (e) {\n    console.log(e);\n  }\n}\n","import React from 'react';\n\nimport {\n  IconButton,\n  AppBar,\n  Toolbar,\n  Typography,\n  Fab,\n  Tooltip,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport sessionStoreUserName from '../utils/sessionStore';\nimport signOut from '../dashboard/signin/SignOut';\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n    backgroundColor: 'white',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  fab: {\n    height: '3em',\n    width: '3em',\n  },\n}));\n\n/**\n * Header Component\n *\n */\nconst Header = () => {\n  const classes = useStyles();\n\n  const [user, setUser] = React.useState(sessionStoreUserName());\n\n  /**\n   * clears the session store and then href\n   */\n  const clearSessionStore = () => {\n    setUser(undefined);\n    signOut();\n  };\n\n  const loggedIn = !!user;\n\n  return (\n    <div>\n      <AppBar\n        position=\"static\"\n        color=\"default\"\n        elevation={0}\n        className={classes.appBar}\n      >\n        <Toolbar className={classes.toolbar}>\n          <Typography\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.toolbarTitle}\n          >\n            Agile Poker\n          </Typography>\n          <nav>\n            {\n              //   <Link\n              //   variant=\"button\"\n              //   color=\"textPrimary\"\n              //   href=\"#\"\n              //   className={classes.link}\n              // >\n              //   Support\n              // </Link>\n            }\n          </nav>\n          {loggedIn && (\n            <div>\n              {' '}\n              <Tooltip title=\"Profile\" arrow>\n                <IconButton>\n                  <Fab color=\"primary\" className={classes.fab}>\n                    <AccountCircleIcon />\n                  </Fab>\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Logout\" arrow>\n                <IconButton\n                  //href={`${process.env.PUBLIC_URL}/`}\n                  onClick={() => clearSessionStore()}\n                >\n                  <Fab color=\"secondary\" className={classes.fab}>\n                    <ExitToAppIcon />\n                  </Fab>\n                </IconButton>\n              </Tooltip>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Dashboard from './dashboard/Dashboard';\nimport { Box } from '@material-ui/core';\nimport Copyright from './dashboard/Copyright';\nimport Header from './header/Header';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header>\n        <Header />\n      </header>\n\n      <Dashboard />\n\n      <footer>\n        <Box mt={8}>\n          <Copyright />\n        </Box>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/infinity.cf7b1a96.svg\";"],"sourceRoot":""}