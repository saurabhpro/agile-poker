{"version":3,"sources":["component/Firebase/context.js","component/Firebase/config.js","component/Firebase/Firebase.js","component/Firebase/index.js","component/dashboard/frame/poker-card/PokerCard.js","component/dashboard/frame/poker-card/Result.js","component/utils/sessionStore.js","component/dashboard/frame/poker-card/AllCardsPanel.js","component/dashboard/frame/CardPanel.js","component/utils/firebaseDb.js","component/dashboard/frame/right-panel/RightPannelActionCard.js","component/dashboard/frame/right-panel/team/TeamMember.js","component/dashboard/frame/right-panel/team/Team.js","component/dashboard/frame/right-panel/RightPannelTeamStatusCard.js","component/dashboard/frame/RightSidePanel.js","component/dashboard/frame/HomePage.js","component/auth/styles.js","component/auth/SignIn.js","component/dashboard/Dashboard.js","component/dashboard/Copyright.js","component/auth/SignOut.js","component/header/Header.js","component/App.js","serviceWorker.js","index.js","component/dashboard/frame/poker-card/icon/infinity.svg"],"names":["React","createContext","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","database","firestore","PokerCard","props","state","value","storyPoint","style","getDisplayableValue","Card","Img","variant","src","infinity","alt","onClick","bind","storePoint","this","className","id","Body","footer","Footer","Component","compareMaps","map1","map2","testVal","size","key","val","get","undefined","has","Result","useState","Map","resultMap","setResultMap","useEffect","voteRef","collection","doc","data","observer","onSnapshot","querySnapshot","console","log","forEach","set","err","CardDeck","flexDirection","marginTop","marginBottom","cards","k","v","push","width","height","background","textDecoration","substring","indexOf","toUpperCase","getAllCards","sessionStoreUserName","sessionStorage","getItem","AllCardsPanel","userName","cardValues","setCardValues","selectedSP","setSelectedSP","showResult","setShowResult","unsubscribe","snapshot","sp","docs","map","point","numeric","lockStoryPointCard","res","sort","a","b","element","disabled","CardPanel","getCurrentlyLoggedInUserDetails","userRef","removeAllTaskStoryPoints","taskId","delete","RightPannelActionCard","currentUser","Title","Text","role","Button","block","window","location","href","process","TeamMember","team","users","setUsers","tmp","filter","ArrayObjectEquals","usr","isActive","slice","TeamMemberDetail","isOnline","onlineNotification","offlineNotification","Tooltip","title","placement","oldArr","newArr","length","result","o","n","rv","Team","teamName","setTeamName","then","RightPannelTeamStatusCard","border","RightSidePanel","setCurrentUser","Container","HomePage","flexGrow","Row","styles","makeStyles","theme","paper","spacing","display","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","SignIn","setUserName","exists","setUser","updateUserToOnline","classes","component","maxWidth","CssBaseline","Avatar","Typography","onSubmit","event","preventDefault","getAndSetUser","setItem","addUserNameToSessionStore","noValidate","TextField","required","onChange","target","fullWidth","label","name","autoComplete","autoFocus","type","color","memberSince","Dashboard","Copyright","align","Link","Date","getFullYear","signOut","removeItem","unsetUser","user","merge","error","useStyles","ul","padding","listStyle","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","link","fab","Header","loggedIn","AppBar","position","elevation","Toolbar","noWrap","arrow","IconButton","alert","Fab","App","Box","mt","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.7229366c.chunk.js","sourcesContent":["import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;\n","const config = {\n  apiKey: 'AIzaSyB7eDqSi97maZL5LjOSBrnbRUrqDVOKuVw',\n  authDomain: 'agile-poker-sk.firebaseapp.com',\n  databaseURL: 'https://agile-poker-sk.firebaseio.com',\n  projectId: 'agile-poker-sk',\n  storageBucket: 'agile-poker-sk.appspot.com',\n  messagingSenderId: '243041283381',\n  appId: '1:243041283381:web:59f749904068703030307c',\n  measurementId: 'G-PLT1CHSW9K',\n};\nexport default config;\n\n/*\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n\n  REACT_APP_API_KEY=AIzaSyB7eDqSi97maZL5LjOSBrnbRUrqDVOKuVw\n  REACT_APP_AUTH_DOMAIN=agile-poker-sk.firebaseapp.com\n  REACT_APP_DATABASE_URL=https://agile-poker-sk.firebaseio.com\n  REACT_APP_PROJECT_ID=agile-poker-sk\n  REACT_APP_STORAGE_BUCKET=agile-poker-sk.appspot.com\n  REACT_APP_MESSAGING_SENDER_ID=243041283381\n  REACT_APP_ID=1:243041283381:web:59f749904068703030307c\n  REACT_APP_MEASUREMENT_ID=G-PLT1CHSW9K\n  */\n","// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport firebase from 'firebase/app';\n\n// Add the Firebase services that you want to use\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport config from './config';\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth;\nexport const database = firebase.firestore();\n","/*\nFor a well-encapsulated Firebase module, we'll define a index.js file in our Firebase folder that exports all necessary functionalities (Firebase class, Firebase context for Consumer and Provider components):\n*/\n\nimport FirebaseContext from './context';\nimport { auth, database } from './Firebase';\n\nexport default database;\n\nexport { auth, FirebaseContext };\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport './PokerCard.css';\nimport infinity from './icon/infinity.svg';\n\nclass PokerCard extends Component {\n  state = {\n    value: {\n      storyPoint: this.props.value,\n      style: this.props.style,\n    },\n  };\n\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  getDisplayableValue = () => {\n    return this.state.value.storyPoint !== 'Infinity' ? (\n      this.state.value.storyPoint\n    ) : (\n      <Card.Img variant=\"center\" src={infinity} alt=\"Infinity\" />\n    );\n  };\n\n  onClick = (value) => {\n    this.props.onClick && this.props.onClick(value);\n  };\n\n  render() {\n    const storePoint = this.getDisplayableValue();\n    const { value } = this.state;\n\n    return (\n      <div>\n        <Card\n          style={value.style}\n          className=\"m-1 pokerCard\"\n          id={value.storyPoint}\n          onClick={() => this.onClick(value.storyPoint)}\n        >\n          <Card.Body>\n            <h4>{storePoint}</h4>\n          </Card.Body>\n          {this.props.footer && (\n            <Card.Footer className=\"pokerCard__footer\">\n              {this.props.footer}\n            </Card.Footer>\n          )}\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default PokerCard;\n","import React from 'react';\n\nimport database from '../../../Firebase';\nimport PokerCard from './PokerCard';\nimport { CardDeck } from 'react-bootstrap';\n\nconst Result = (props) => {\n  const [resultMap, setResultMap] = React.useState(new Map());\n\n  React.useEffect(() => {\n    const voteRef = database\n      .collection('result')\n      .doc('IND-01')\n      .collection('users');\n\n    const data = new Map();\n\n    const observer = voteRef.onSnapshot(\n      (querySnapshot) => {\n        console.log(\n          `Received query snapshot of size ${querySnapshot.size}`,\n        );\n\n        querySnapshot.forEach((doc) => {\n          data.set(doc.id, doc.data().storyPoint);\n        });\n\n        if (!compareMaps(data, resultMap)) {\n          setResultMap(data);\n        }\n      },\n      (err) => {\n        console.log(`Encountered error: ${err}`);\n      },\n    );\n\n    return () => {\n      observer();\n    };\n  }, [resultMap]);\n\n  const getStyle = () => {\n    return {\n      width: '10rem',\n      height: '15em',\n      background: 'lightgreen',\n      textDecoration: 'none',\n    };\n  };\n\n  const getAllCards = () => {\n    const cards = [];\n\n    resultMap.forEach((k, v) => {\n      cards.push(\n        <PokerCard\n          key={v}\n          value={k}\n          style={getStyle()}\n          footer={v.substring(0, v.indexOf('@')).toUpperCase()}\n        />,\n      );\n    });\n\n    return cards;\n  };\n\n  return (\n    <div>\n      {resultMap && (\n        <CardDeck\n          style={{\n            flexDirection: 'row',\n            marginTop: '10px',\n            marginBottom: '20px',\n          }}\n        >\n          {getAllCards()}\n        </CardDeck>\n      )}\n    </div>\n  );\n};\n\nconst compareMaps = (map1, map2) => {\n  let testVal;\n  if (map1.size !== map2.size) {\n    return false;\n  }\n\n  for (const [key, val] of map1) {\n    testVal = map2.get(key);\n    // in cases of an undefined value, make sure the key\n    // actually exists on the object so there are no false positives\n    if (\n      testVal !== val ||\n      (testVal === undefined && !map2.has(key))\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nResult.propTypes = {};\n\nexport default Result;\n","/**\n * get the user name store in sesson store\n */\nconst sessionStoreUserName = () =>\n  sessionStorage.getItem('agilePokerUserName') || '';\n\n/**\n * clears the user name store in session store\n */\nexport const sessionStoreClearUserName = () =>\n  sessionStorage.removeItem('agilePokerUserName');\n/**\n *\n * @param {*} userName sets this user name into the session store\n */\nexport const addUserNameToSessionStore = (userName) =>\n  sessionStorage.setItem('agilePokerUserName', userName);\n\nexport default sessionStoreUserName;\n","import React, { useState, useEffect } from 'react';\nimport { CardDeck } from 'react-bootstrap';\n\nimport Result from './Result';\nimport PokerCard from './PokerCard';\n\nimport database from '../../../Firebase';\nimport sessionStoreUserName from '../../../utils/sessionStore';\n\nexport default function AllCardsPanel() {\n  const userName = sessionStoreUserName();\n  const [cardValues, setCardValues] = useState([]);\n  const [selectedSP, setSelectedSP] = useState(undefined);\n  const [showResult, setShowResult] = useState(false);\n\n  // cardValues: [1, 2, 3, 5, 8, 13, 20, Infinity],\n  // selectedSP: undefined,\n\n  useEffect(() => {\n    const unsubscribe = database\n      .collection('points')\n      .onSnapshot((snapshot) => {\n        const sp = snapshot.docs.map((point) => point.data().numeric);\n        setCardValues(sp[0]);\n      });\n\n    return () => {\n      // this is the cleanup of listeners\n      unsubscribe(); //it'll detach the listeners\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const lockStoryPointCard = (value) => {\n    setSelectedSP(value);\n\n    // Add a new document in collection \"result/task/users\" with ID 'userName'\n    const res = database\n      .collection('result')\n      .doc('IND-01')\n      .collection('users')\n      .doc(userName)\n      .set({ storyPoint: value });\n\n    console.log('Stored Result: ', res);\n\n    setShowResult(true);\n    setCardValues([value]);\n  };\n\n  const getStyle = (value) => {\n    return {\n      width: '10rem',\n      height: '15em',\n      disabled: selectedSP !== value,\n    };\n  };\n\n  const getAllCards = () => {\n    const cards = [];\n\n    cardValues\n      .sort((a, b) => a - b)\n      .forEach((element) => {\n        cards.push(\n          <PokerCard\n            key={element}\n            value={element}\n            style={getStyle(element)}\n            onClick={lockStoryPointCard}\n          />,\n        );\n      });\n\n    return cards;\n  };\n\n  return (\n    <div>\n      {!showResult ? (\n        <CardDeck\n          style={{\n            flexDirection: 'row',\n            marginTop: '10px',\n            marginBottom: '20px',\n          }}\n        >\n          {getAllCards()}\n        </CardDeck>\n      ) : (\n        <Result />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport AllCardsPanel from './poker-card/AllCardsPanel';\n\nexport default function CardPanel() {\n  return (\n    <div>\n      <AllCardsPanel />\n    </div>\n  );\n}\n","import database from '../Firebase';\nimport sessionStoreUserName from './sessionStore';\n\n/**\n * async function to get user data from firebase\n * @param {*} userName \n */\nconst getCurrentlyLoggedInUserDetails = async (userName) => {\n  //fallback\n  if (!userName) {\n    userName = sessionStoreUserName();\n  }\n\n  // Get user\n  const userRef = database.collection('users').doc(userName);\n  const doc = await userRef.get();\n\n  console.log('Currently Logged in User Result: ', doc.data());\n  return { ...doc.data() };\n};\n\n/**\n * remove all tasks from result\n * @param {*} taskId \n */\nconst removeAllTaskStoryPoints = async (taskId) => {\n  await database.collection('result').doc(taskId).delete();\n  console.log('Deleted all Results: ');\n};\n\nexport { getCurrentlyLoggedInUserDetails, removeAllTaskStoryPoints };\n","import React from 'react';\nimport { Card, Button } from 'react-bootstrap';\n\nimport './RighSideCard.css';\nimport { removeAllTaskStoryPoints } from '../../../utils/firebaseDb';\n\nconst RightPannelActionCard = ({ currentUser, style }) => {\n  const reset = () => {\n    removeAllTaskStoryPoints('IND-01');\n    window.location.href = `${process.env.PUBLIC_URL}/`;\n  };\n\n  return (\n    <Card className=\"rightCard\" style={style}>\n      <Card.Body>\n        <Card.Title className=\"title\">Poker</Card.Title>\n\n        <Card.Text className=\"text\">\n          {currentUser.userName.toUpperCase()}\n        </Card.Text>\n\n        <p className=\"text\">\n          {currentUser.role\n            ? currentUser.role.toUpperCase()\n            : 'TEAM MEMBER'}\n        </p>\n\n        {(currentUser.role.toUpperCase() === 'SCRUM MASTER' ||\n          currentUser.role.toUpperCase() === 'PRODUCT OWNER') && (\n          <Button block onClick={() => reset()} variant=\"Link\">\n            Reset\n          </Button>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default RightPannelActionCard;\n","import React, { useState, useEffect } from 'react';\n\nimport ImportantDevicesIcon from '@material-ui/icons/ImportantDevices';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { Tooltip } from '@material-ui/core';\n\nimport database from '../../../../Firebase';\n\nimport './TeamMember.css';\n\nexport default function TeamMember({ team }) {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    const tmp = [];\n\n    const unsubscribe = database\n      .collection('users')\n      .onSnapshot((snapshot) => {\n        snapshot.docs\n          .map((point) => point.data())\n          .filter((doc) => doc.team.toUpperCase() === team)\n          .forEach((doc) => {\n            // add all data to an array - TODO sometmes double entries are loaded here\n            tmp.push(doc);\n          });\n\n        if ((!users && tmp) || !ArrayObjectEquals(users, tmp)) {\n          console.log(users, '=>', tmp);\n          setUsers(tmp);\n        }\n      });\n\n    return () => {\n      // this is the cleanup of listeners\n      unsubscribe(); //it'll detach the listeners\n    };\n  }, [users, team]);\n\n  return (\n    <div>\n      {users\n        .filter(\n          (usr) => usr.isActive && usr.team.toUpperCase() === team,\n        )\n        .slice(0, 7) // max 7 users visible on side pane\n        // .filter((usr) => usr.team === getUserName)\n        .map((usr) => (\n          <TeamMemberDetail key={usr.userName} usr={usr} />\n        ))}\n    </div>\n  );\n}\n\nconst TeamMemberDetail = ({ usr }) => {\n  return (\n    <div className=\"teamMember\">\n      <div className=\"teamMember__details\">\n        <p>{usr.userName.toUpperCase()}</p>\n        <span>\n          {usr.isOnline\n            ? onlineNotification()\n            : offlineNotification()}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nconst offlineNotification = () => {\n  return (\n    <Tooltip title=\"offline\" placement=\"right-start\">\n      <NotInterestedIcon className=\"teamMember__offline\" />\n    </Tooltip>\n  );\n};\n\nconst onlineNotification = () => {\n  return (\n    <Tooltip title=\"connected\" placement=\"right-start\">\n      <ImportantDevicesIcon className=\"teamMember__online\" />\n    </Tooltip>\n  );\n};\n\nconst ArrayObjectEquals = (oldArr, newArr) => {\n  if (oldArr.length !== newArr.length) {\n    return false;\n  }\n\n  let result = true;\n\n  oldArr.forEach((o) => {\n    newArr.forEach((n) => {\n      let rv = true;\n      if (o.userName === n.userName) {\n        rv = rv && n['isOnline'] === o['isOnline'];\n        if (!rv) {\n          console.log(\n            'isOnline',\n            ' ',\n            n['isOnline'],\n            ' ',\n            o['isOnline'],\n          );\n        }\n      }\n\n      result = result && rv;\n    });\n  });\n\n  return result;\n};\n","import React, { useState, useEffect } from 'react';\n\nimport TeamMember from './TeamMember';\n\nimport './Team.css';\nimport { getCurrentlyLoggedInUserDetails } from '../../../../utils/firebaseDb';\n\nconst Team = ({ className }) => {\n  const [teamName, setTeamName] = useState();\n\n  useEffect(() => {\n    const getTeam = () =>\n      getCurrentlyLoggedInUserDetails().then((usr) =>\n        setTeamName(usr.team.toUpperCase()),\n      );\n\n    if (!teamName) {\n      getTeam();\n    }\n  }, [teamName]);\n\n  return (\n    <div>\n      {teamName && (\n        <div className=\"team\">\n          <div className=\"team__title\">\n            <h5\n              className={className}\n            >{`${teamName.toUpperCase()}`}</h5>\n          </div>\n\n          <TeamMember team={teamName} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Team;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport Team from './team/Team';\nimport './RighSideCard.css';\n\nconst RightPannelTeamStatusCard = ({ style }) => {\n  return (\n    <Card className=\"rightCard teamCard\" style={style}>\n      <Card.Body>\n        <Team className=\"title\" />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default RightPannelTeamStatusCard;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nimport { getCurrentlyLoggedInUserDetails } from '../../utils/firebaseDb';\nimport RightPannelActionCard from './right-panel/RightPannelActionCard';\nimport RightPannelTeamStatusCard from './right-panel/RightPannelTeamStatusCard';\n\nconst style = { border: 'none' };\n\nexport default function RightSidePanel({ userName }) {\n  const [currentUser, setCurrentUser] = React.useState();\n\n  React.useEffect(() => {\n    const getCurrentUser = () => {\n      getCurrentlyLoggedInUserDetails(userName).then((usr) =>\n        setCurrentUser(usr),\n      );\n    };\n\n    if (!currentUser) {\n      getCurrentUser();\n    }\n  }, [currentUser, userName]);\n\n  return (\n    <div>\n      {currentUser && (\n        <Container className=\"justify-content-center\">\n          <RightPannelActionCard\n            currentUser={currentUser}\n            style={style}\n          />\n          <RightPannelTeamStatusCard style={style} />\n        </Container>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { Row } from 'react-bootstrap';\n\nimport CardPanel from './CardPanel';\nimport RightSidePanel from './RightSidePanel';\n\nconst HomePage = ({ userName }) => {\n  return (\n    <div\n      className=\"container-md content-justify-center-sm\"\n      style={{ flexGrow: 3 }}\n    >\n      <Row>\n        <div className=\"col-sm-9\">\n          <CardPanel />\n        </div>\n        <div className=\"col-md\">\n          <RightSidePanel userName={userName} />\n        </div>\n      </Row>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default styles;\n","import React from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nimport styles from './styles';\n\nimport database from '../Firebase';\nimport { addUserNameToSessionStore } from '../utils/sessionStore';\n\nexport default function SignIn() {\n  const [userName, setUserName] = React.useState(undefined);\n\n  const onChange = (event) => {\n    setUserName(event.target.value);\n  };\n\n  /**\n   * async method to fetch the user from firebase\n   * and if found set it to be online and active\n   */\n  async function getAndSetUser() {\n    const userRef = database.collection('users').doc(userName);\n    const doc = await userRef.get();\n\n    if (doc.exists) {\n      setUser(doc.data());\n    }\n  }\n\n  /**\n   * aysnc method to update the firebae document with the actived and online user\n   * @param {*} doc the firebase document\n   */\n  const setUser = async (doc) => {\n    const data = updateUserToOnline(doc);\n\n    // Add a new document in collection \"cities\" with ID 'LA'\n    const res = await database\n      .collection('users')\n      .doc(userName)\n      .set(data);\n\n    console.log('Set logged in user: ', res);\n    // allow refreshing the page - and since our update was sucessful - we wil see home page\n    window.location.href = `${process.env.PUBLIC_URL}/`;\n  };\n\n  /**\n   * handles the form submission from the sign in screen\n   * @param {*} event\n   */\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    if (!!userName) {\n      getAndSetUser();\n\n      addUserNameToSessionStore(userName);\n    }\n  };\n\n  /**\n   * material ui classes for sign in screen\n   */\n  const classes = styles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Agile Poker Table\n        </Typography>\n        <form className={classes.form} onSubmit={onSubmit} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            onChange={onChange}\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"userName\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Enter\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\n/**\n * Updates the doc to be online and active\n * @param {*} doc\n */\nexport const updateUserToOnline = (doc) => {\n  return {\n    userName: doc.userName,\n    isOnline: true,\n    isActive: true,\n    memberSince: doc.memberSince,\n    team: doc.team,\n    role: doc.role,\n  };\n};\n","import React from 'react';\nimport HomePage from './frame/HomePage';\nimport sessionStoreUserName from '../utils/sessionStore';\nimport SignIn from '../auth/SignIn';\n\nexport default function Dashboard() {\n  const userName = sessionStoreUserName();\n\n  return (\n    <div>\n      {userName ? <HomePage userName={userName} /> : <SignIn />}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport default function Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://github.com/saurabhpro/\">\n        Saurabh\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n","import sessionStoreUserName, {\n  sessionStoreClearUserName,\n} from '../utils/sessionStore';\n\nimport database from '../Firebase';\n\nexport default function signOut() {\n  const userName = sessionStoreUserName();\n  sessionStoreClearUserName();\n\n  unsetUser(userName);\n}\n\n/**\n * aysnc method to mark the currently active user offline\n * @param {*} user the username or primary key of firebase document\n */\nasync function unsetUser(user) {\n  const userRef = database.collection('users').doc(user);\n\n  try {\n    // try printing the user data\n    // const doc = await userRef.get();\n    // if (!doc.exists) {\n    //   console.log('No such document!');\n    // } else {\n    //   console.log('Document data:', doc.data());\n    // }\n\n    const res = await userRef.set(\n      {\n        isOnline: false,\n      },\n      { merge: true },\n    );\n\n    console.log('Set: ', res);\n\n    // allow refreshing the page - and since our update was sucessful - we wil see home page\n    window.location.href = `${process.env.PUBLIC_URL}/`;\n  } catch (e) {\n    console.error(e);\n  }\n}\n","import React from 'react';\n\nimport {\n  IconButton,\n  AppBar,\n  Toolbar,\n  Typography,\n  Fab,\n  Tooltip,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport sessionStoreUserName from '../utils/sessionStore';\nimport signOut from '../auth/SignOut';\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n    backgroundColor: 'white',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  fab: {\n    height: '3em',\n    width: '3em',\n  },\n}));\n\n/**\n * Header Component\n *\n */\nconst Header = () => {\n  const classes = useStyles();\n\n  const [user, setUser] = React.useState(sessionStoreUserName());\n\n  /**\n   * clears the session store and then href\n   */\n  const clearSessionStore = () => {\n    signOut();\n    setUser(undefined);\n  };\n\n  const loggedIn = !!user;\n\n  return (\n    <div>\n      <AppBar\n        position=\"static\"\n        color=\"default\"\n        elevation={0}\n        className={classes.appBar}\n      >\n        <Toolbar className={classes.toolbar}>\n          <Typography\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.toolbarTitle}\n          >\n            Agile Poker\n          </Typography>\n          <nav>\n            {\n              //   <Link\n              //   variant=\"button\"\n              //   color=\"textPrimary\"\n              //   href=\"#\"\n              //   className={classes.link}\n              // >\n              //   Support\n              // </Link>\n            }\n          </nav>\n          {loggedIn && (\n            <div>\n              {' '}\n              <Tooltip title=\"Profile\" arrow>\n                <IconButton\n                  onClick={() =>\n                    alert('you found a hidden feature ;)')\n                  }\n                >\n                  <Fab color=\"primary\" className={classes.fab}>\n                    <AccountCircleIcon />\n                  </Fab>\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Logout\" arrow>\n                <IconButton\n                  //href={`${process.env.PUBLIC_URL}/`}\n                  onClick={() => clearSessionStore()}\n                >\n                  <Fab color=\"secondary\" className={classes.fab}>\n                    <ExitToAppIcon />\n                  </Fab>\n                </IconButton>\n              </Tooltip>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Dashboard from './dashboard/Dashboard';\nimport { Box } from '@material-ui/core';\nimport Copyright from './dashboard/Copyright';\nimport Header from './header/Header';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header>\n        <Header />\n      </header>\n\n      <Dashboard />\n\n      <footer>\n        <Box mt={8}>\n          <Copyright />\n        </Box>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/infinity.cf7b1a96.svg\";"],"sourceRoot":""}