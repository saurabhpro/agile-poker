{"version":3,"sources":["component/poker-card/PokerCard.js","component/Firebase/context.js","component/Firebase/config.js","component/Firebase/Firebase.js","component/Firebase/index.js","component/utils/sessionStore.js","component/poker-card/Result.js","component/poker-card/AllCardsPanel.js","component/dashboard/frame/CardPanel.js","component/dashboard/team/TeamMember.js","component/dashboard/team/Team.js","component/dashboard/frame/RightSidePanel.js","component/dashboard/HomePage.js","component/auth/styles.js","component/auth/SignIn.js","component/dashboard/Dashboard.js","component/dashboard/Copyright.js","component/auth/SignOut.js","component/header/Header.js","component/App.js","serviceWorker.js","index.js","component/poker-card/icon/infinity.svg"],"names":["PokerCard","props","state","value","storyPoint","style","getDisplayableValue","Card","Img","variant","src","infinity","alt","onClick","bind","storePoint","this","className","id","Body","footer","Footer","Component","React","createContext","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","database","firestore","sessionStoreUserName","sessionStorage","getItem","Result","useState","Map","resultMap","setResultMap","useEffect","voteRef","collection","doc","data","observer","onSnapshot","querySnapshot","console","log","size","forEach","set","compareMaps","err","map1","map2","testVal","key","val","get","undefined","has","CardDeck","flexDirection","marginTop","marginBottom","cards","k","v","push","width","height","background","getAllCards","AllCardsPanel","userName","cardValues","setCardValues","selectedSP","setSelectedSP","showResult","setShowResult","unsubscribe","snapshot","sp","docs","map","point","numeric","lockStoryPointCard","res","sort","a","b","element","disabled","CardPanel","TeamMember","team","users","setUsers","tmp","filter","toUpperCase","ArrayObjectEquals","usr","isActive","slice","TeamMemberDetail","isOnline","onlineNotification","offlineNotification","Tooltip","title","placement","oldArr","newArr","length","result","o","n","rv","Team","teamName","setTeamName","then","border","RightSidePanel","Container","Title","Text","Button","block","window","location","href","process","HomePage","flexGrow","Row","styles","makeStyles","theme","paper","spacing","display","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","SignIn","setUserName","userRef","exists","setUser","memberSince","setItem","classes","component","maxWidth","CssBaseline","Avatar","Typography","onSubmit","event","preventDefault","getAndSetUser","noValidate","TextField","required","onChange","target","fullWidth","label","name","autoComplete","autoFocus","type","color","Dashboard","Copyright","align","Link","Date","getFullYear","signOut","removeItem","unsetUser","user","merge","useStyles","ul","padding","listStyle","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","link","fab","Header","loggedIn","AppBar","position","elevation","Toolbar","noWrap","arrow","IconButton","Fab","App","Box","mt","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.4973bb0b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport './PokerCard.css';\nimport infinity from './icon/infinity.svg';\n\nclass PokerCard extends Component {\n  state = {\n    value: {\n      storyPoint: this.props.value,\n      style: this.props.style,\n    },\n  };\n\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  getDisplayableValue = () => {\n    return this.state.value.storyPoint !== 'Infinity' ? (\n      this.state.value.storyPoint\n    ) : (\n      <Card.Img variant=\"center\" src={infinity} alt=\"Infinity\" />\n    );\n  };\n\n  onClick = (value) => {\n    this.props.onClick(value);\n  };\n\n  render() {\n    const storePoint = this.getDisplayableValue();\n    const { value } = this.state;\n\n    return (\n      <div>\n        <Card\n          style={value.style}\n          className=\"m-1 pokerCard\"\n          id={value.storyPoint}\n          onClick={() => this.onClick(value.storyPoint)}\n        >\n          <Card.Body>\n            <h4>{storePoint}</h4>\n          </Card.Body>\n          {this.props.footer && (\n            <Card.Footer className=\"pokerCard__footer\">\n              {this.props.footer}\n            </Card.Footer>\n          )}\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default PokerCard;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;\n","const config = {\n  apiKey: 'AIzaSyB7eDqSi97maZL5LjOSBrnbRUrqDVOKuVw',\n  authDomain: 'agile-poker-sk.firebaseapp.com',\n  databaseURL: 'https://agile-poker-sk.firebaseio.com',\n  projectId: 'agile-poker-sk',\n  storageBucket: 'agile-poker-sk.appspot.com',\n  messagingSenderId: '243041283381',\n  appId: '1:243041283381:web:59f749904068703030307c',\n  measurementId: 'G-PLT1CHSW9K',\n};\nexport default config;\n","// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport firebase from 'firebase/app';\n\n// Add the Firebase services that you want to use\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport config from './config';\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth;\nexport const database = firebase.firestore();\n","/*\nFor a well-encapsulated Firebase module, we'll define a index.js file in our Firebase folder that exports all necessary functionalities (Firebase class, Firebase context for Consumer and Provider components):\n*/\n\nimport FirebaseContext from './context';\nimport { auth, database } from './Firebase';\n\nexport default database;\n\nexport { auth, FirebaseContext };\n","const sessionStoreUserName = () =>\n  sessionStorage.getItem('agilePokerUserName') || '';\n\nexport const sessionStoreClearUserName = () =>\n  sessionStorage.removeItem('agilePokerUserName');\n\nexport default sessionStoreUserName;\n","import React from 'react';\n\nimport database from '../Firebase';\nimport PokerCard from './PokerCard';\nimport { CardDeck } from 'react-bootstrap';\n\nconst Result = (props) => {\n  const [resultMap, setResultMap] = React.useState(new Map());\n\n  React.useEffect(() => {\n    const voteRef = database\n      .collection('result')\n      .doc('IND-01')\n      .collection('users');\n\n    const data = new Map();\n\n    const observer = voteRef.onSnapshot(\n      (querySnapshot) => {\n        console.log(\n          `Received query snapshot of size ${querySnapshot.size}`,\n        );\n\n        querySnapshot.forEach((doc) => {\n          data.set(doc.id, doc.data().storyPoint);\n        });\n\n        if (!compareMaps(data, resultMap)) {\n          setResultMap(data);\n        }\n      },\n      (err) => {\n        console.log(`Encountered error: ${err}`);\n      },\n    );\n\n    return () => {\n      observer();\n    };\n  }, [resultMap]);\n\n  const compareMaps = (map1, map2) => {\n    let testVal;\n    if (map1.size !== map2.size) {\n      return false;\n    }\n\n    for (const [key, val] of map1) {\n      testVal = map2.get(key);\n      // in cases of an undefined value, make sure the key\n      // actually exists on the object so there are no false positives\n      if (\n        testVal !== val ||\n        (testVal === undefined && !map2.has(key))\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const getStyle = () => {\n    return {\n      width: '10rem',\n      height: '15em',\n      background: 'pink',\n    };\n  };\n\n  const getAllCards = () => {\n    const cards = [];\n    //console.log(cardValues);\n\n    resultMap.forEach((k, v) => {\n      cards.push(\n        <PokerCard key={v} value={k} style={getStyle()} footer={v} />,\n      );\n    });\n\n    return cards;\n  };\n\n  return (\n    <div>\n      {resultMap && (\n        <CardDeck\n          style={{\n            flexDirection: 'row',\n            marginTop: '10px',\n            marginBottom: '20px',\n          }}\n        >\n          {getAllCards()}\n        </CardDeck>\n      )}\n    </div>\n  );\n};\n\nResult.propTypes = {};\n\nexport default Result;\n","import React, { useState, useEffect } from 'react';\nimport { CardDeck } from 'react-bootstrap';\n\nimport PokerCard from './PokerCard';\n\nimport database from '../Firebase';\nimport sessionStoreUserName from '../utils/sessionStore';\nimport Result from './Result';\n\nexport default function AllCardsPanel() {\n  const userName = sessionStoreUserName();\n  const [cardValues, setCardValues] = useState([]);\n  const [selectedSP, setSelectedSP] = useState(undefined);\n  const [showResult, setShowResult] = useState(false);\n\n  // cardValues: [1, 2, 3, 5, 8, 13, 20, Infinity],\n  // selectedSP: undefined,\n\n  useEffect(() => {\n    const unsubscribe = database\n      .collection('points')\n      .onSnapshot((snapshot) => {\n        const sp = snapshot.docs.map((point) => point.data().numeric);\n        setCardValues(sp[0]);\n      });\n\n    return () => {\n      // this is the cleanup of listeners\n      unsubscribe(); //it'll detach the listeners\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const lockStoryPointCard = (value) => {\n    setSelectedSP(value);\n\n    // Add a new document in collection \"result/task/users\" with ID 'userName'\n    const res = database\n      .collection('result')\n      .doc('IND-01')\n      .collection('users')\n      .doc(userName)\n      .set({ storyPoint: value });\n\n    console.log('Stored Result: ', res);\n\n    setShowResult(true);\n    setCardValues([value]);\n  };\n\n  const getStyle = (value) => {\n    return {\n      width: '10rem',\n      height: '15em',\n      disabled: selectedSP !== value,\n    };\n  };\n\n  const getAllCards = () => {\n    const cards = [];\n   \n    cardValues\n      .sort((a, b) => a - b)\n      .forEach((element) => {\n        cards.push(\n          <PokerCard\n            key={element}\n            value={element}\n            style={getStyle(element)}\n            onClick={lockStoryPointCard}\n          />,\n        );\n      });\n\n    return cards;\n  };\n\n  return (\n    <div>\n      {!showResult ? (\n        <CardDeck\n          style={{\n            flexDirection: 'row',\n            marginTop: '10px',\n            marginBottom: '20px',\n          }}\n        >\n          {getAllCards()}\n        </CardDeck>\n      ) : (\n        <Result />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport AllCardsPanel from '../../poker-card/AllCardsPanel';\n\nexport default function CardPanel() {\n  return (\n    <div>\n      <AllCardsPanel />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nimport ImportantDevicesIcon from '@material-ui/icons/ImportantDevices';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { Tooltip } from '@material-ui/core';\n\nimport database from '../../Firebase';\n\nimport './TeamMember.css';\n\nexport default function TeamMember({ team }) {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    const tmp = [];\n\n    const unsubscribe = database\n      .collection('users')\n      .onSnapshot((snapshot) => {\n        snapshot.docs\n          .map((point) => point.data())\n          .filter((doc) => doc.team.toUpperCase() === team)\n          .forEach((doc) => {\n            // add all data to an array - TODO sometmes double entries are loaded here\n            tmp.push(doc);\n          });\n\n        if ((!users && tmp) || !ArrayObjectEquals(users, tmp)) {\n          console.log(users, '=>', tmp);\n          setUsers(tmp);\n        }\n      });\n\n    return () => {\n      // this is the cleanup of listeners\n      unsubscribe(); //it'll detach the listeners\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [users]);\n\n  return (\n    <div>\n      {users\n        .filter(\n          (usr) => usr.isActive && usr.team.toUpperCase() === team,\n        )\n        .slice(0, 7) // max 7 users visible on side pane\n        // .filter((usr) => usr.team === getUserName)\n        .map((usr) => (\n          <TeamMemberDetail key={usr.userName} usr={usr} />\n        ))}\n    </div>\n  );\n}\n\nconst TeamMemberDetail = ({ usr }) => {\n  return (\n    <div className=\"teamMember\">\n      <div className=\"teamMember__details\">\n        <p>{usr.userName.toUpperCase()}</p>\n        <span>\n          {usr.isOnline\n            ? onlineNotification()\n            : offlineNotification()}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nconst offlineNotification = () => {\n  return (\n    <Tooltip title=\"offline\" placement=\"right-start\">\n      <NotInterestedIcon className=\"teamMember__offline\" />\n    </Tooltip>\n  );\n};\n\nconst onlineNotification = () => {\n  return (\n    <Tooltip title=\"connected\" placement=\"right-start\">\n      <ImportantDevicesIcon className=\"teamMember__online\" />\n    </Tooltip>\n  );\n};\n\nconst ArrayObjectEquals = (oldArr, newArr) => {\n  if (oldArr.length !== newArr.length) {\n    return false;\n  }\n\n  let result = true;\n\n  oldArr.forEach((o) => {\n    newArr.forEach((n) => {\n      let rv = true;\n      if (o.userName === n.userName) {\n        rv = rv && n['isOnline'] === o['isOnline'];\n        if (!rv) {\n          console.log(\n            'isOnline',\n            ' ',\n            n['isOnline'],\n            ' ',\n            o['isOnline'],\n          );\n        }\n      }\n\n      result = result && rv;\n    });\n  });\n\n  return result;\n};\n","import React, { useState, useEffect } from 'react';\n\nimport database from '../../Firebase';\nimport sessionStoreUserName from '../../utils/sessionStore';\nimport TeamMember from './TeamMember';\n\nimport './Team.css';\n\nconst Team = ({ className }) => {\n  const userName = sessionStoreUserName();\n  const [teamName, setTeamName] = useState(undefined);\n\n  useEffect(() => {\n    let team = undefined;\n    database\n      .collection('users')\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          // // doc.data() is never undefined for query doc snapshots\n          //console.log(doc.id, ' => ', doc.data());\n          if (!teamName && doc.id === userName) {\n            team = doc.data().team.toUpperCase();\n          }\n        });\n      })\n      .then(() => !teamName && setTeamName(team));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [teamName]);\n\n  return (\n    <div>\n      {teamName && (\n        <div className=\"team\">\n          <div className=\"team__title\">\n            <h5\n              className={className}\n            >{`${teamName.toUpperCase()}`}</h5>\n          </div>\n\n          <TeamMember team={teamName} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nTeam.propTypes = {};\n\nexport default Team;\n","import React from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { Container } from 'react-bootstrap';\n\nimport Team from '../team/Team';\nimport './RighSideCard.css';\n\nconst style = { border: 'none' };\n\nexport default function RightSidePanel({ userName }) {\n  return (\n    <div>\n      <Container>\n        <Card className=\"rightCard\" style={style}>\n          <Card.Body>\n            <Card.Title className=\"title\">Poker</Card.Title>\n            <Card.Text className=\"text\">{userName}</Card.Text>\n            <p className=\"text\">Scrum Master</p>\n            <Button\n              block\n              onClick={() => {\n                window.location.href = `${process.env.PUBLIC_URL}/`;\n              }}\n              variant=\"Link\"\n            >\n              Reset\n            </Button>\n          </Card.Body>\n        </Card>\n\n        <Card className=\"rightCard teamCard\" style={style}>\n          <Card.Body>\n            <Team className=\"title\" />\n          </Card.Body>\n        </Card>\n      </Container>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { Row } from 'react-bootstrap';\n\nimport CardPanel from './frame/CardPanel';\nimport RightSidePanel from './frame/RightSidePanel';\n\nconst HomePage = ({ userName }) => {\n  return (\n    <div\n      className=\"container-md content-justify-center-sm\"\n      style={{ flexGrow: 3 }}\n    >\n      <Row>\n        <div className=\"col-sm-9\">\n          <CardPanel />\n        </div>\n        <div className=\"col-md\">\n          <RightSidePanel userName={userName} />\n        </div>\n      </Row>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default styles;\n","import React from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nimport styles from './styles';\n\nimport database from '../Firebase';\n\nexport default function SignIn() {\n  const [userName, setUserName] = React.useState(undefined);\n\n  const onChange = (event) => {\n    setUserName(event.target.value);\n  };\n\n  async function getAndSetUser() {\n    // [START getAndSetUser]\n    const userRef = database.collection('users').doc(userName);\n    const doc = await userRef.get();\n\n    if (doc.exists) {\n      setUser(doc.data());\n    }\n    // [END getAndSetUser]\n  }\n\n  async function setUser(doc) {\n    // [START set_document]\n    const data = {\n      userName: doc.userName,\n      isOnline: true,\n      isActive: true,\n      memberSince: doc.memberSince,\n      team: doc.team,\n    };\n\n    // Add a new document in collection \"cities\" with ID 'LA'\n    const res = await database\n      .collection('users')\n      .doc(userName)\n      .set(data);\n    // [END set_document]\n\n    sessionStorage.setItem('agilePokerUserName', userName);\n\n    console.log('Set: ', res);\n    // allow refreshing the page - and since our update was sucessful - we wil see home page\n    window.location.href = `${process.env.PUBLIC_URL}/`;\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    if (!!userName) {\n      getAndSetUser();\n    }\n  };\n\n  const classes = styles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Agile Poker Table\n        </Typography>\n        <form className={classes.form} onSubmit={onSubmit} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            onChange={onChange}\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"userName\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Enter\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","import React from 'react';\nimport HomePage from './HomePage';\nimport sessionStoreUserName from '../utils/sessionStore';\nimport SignIn from '../auth/SignIn';\n\nexport default function Dashboard() {\n  const userName = sessionStoreUserName();\n\n  return (\n    <div>\n      {userName ? <HomePage userName={userName} /> : <SignIn />}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport default function Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://github.com/saurabhpro/\">\n        Saurabh\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n","import sessionStoreUserName, {\n  sessionStoreClearUserName,\n} from '../utils/sessionStore';\n\nimport database from '../Firebase';\n\nexport default function signOut() {\n  const userName = sessionStoreUserName();\n  sessionStoreClearUserName();\n\n  unsetUser(userName);\n}\n\nasync function unsetUser(user) {\n  // [START set_document]\n\n  const userRef = database.collection('users').doc(user);\n\n  try {\n    // try printing the user data\n    // const doc = await userRef.get();\n    // if (!doc.exists) {\n    //   console.log('No such document!');\n    // } else {\n    //   console.log('Document data:', doc.data());\n    // }\n\n    const res = await userRef.set(\n      {\n        isOnline: false,\n      },\n      { merge: true },\n    );\n    // [END set_document]\n\n    console.log('Set: ', res);\n\n    // allow refreshing the page - and since our update was sucessful - we wil see home page\n    window.location.href = `${process.env.PUBLIC_URL}/`;\n  } catch (e) {\n    console.log(e);\n  }\n}\n","import React from 'react';\n\nimport {\n  IconButton,\n  AppBar,\n  Toolbar,\n  Typography,\n  Fab,\n  Tooltip,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport sessionStoreUserName from '../utils/sessionStore';\nimport signOut from '../auth/SignOut';\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n    backgroundColor: 'white',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  fab: {\n    height: '3em',\n    width: '3em',\n  },\n}));\n\n/**\n * Header Component\n *\n */\nconst Header = () => {\n  const classes = useStyles();\n\n  const [user, setUser] = React.useState(sessionStoreUserName());\n\n  /**\n   * clears the session store and then href\n   */\n  const clearSessionStore = () => {\n    signOut();\n    setUser(undefined);\n  };\n\n  const loggedIn = !!user;\n\n  return (\n    <div>\n      <AppBar\n        position=\"static\"\n        color=\"default\"\n        elevation={0}\n        className={classes.appBar}\n      >\n        <Toolbar className={classes.toolbar}>\n          <Typography\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.toolbarTitle}\n          >\n            Agile Poker\n          </Typography>\n          <nav>\n            {\n              //   <Link\n              //   variant=\"button\"\n              //   color=\"textPrimary\"\n              //   href=\"#\"\n              //   className={classes.link}\n              // >\n              //   Support\n              // </Link>\n            }\n          </nav>\n          {loggedIn && (\n            <div>\n              {' '}\n              <Tooltip title=\"Profile\" arrow>\n                <IconButton>\n                  <Fab color=\"primary\" className={classes.fab}>\n                    <AccountCircleIcon />\n                  </Fab>\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Logout\" arrow>\n                <IconButton\n                  //href={`${process.env.PUBLIC_URL}/`}\n                  onClick={() => clearSessionStore()}\n                >\n                  <Fab color=\"secondary\" className={classes.fab}>\n                    <ExitToAppIcon />\n                  </Fab>\n                </IconButton>\n              </Tooltip>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Dashboard from './dashboard/Dashboard';\nimport { Box } from '@material-ui/core';\nimport Copyright from './dashboard/Copyright';\nimport Header from './header/Header';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header>\n        <Header />\n      </header>\n\n      <Dashboard />\n\n      <footer>\n        <Box mt={8}>\n          <Copyright />\n        </Box>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/infinity.cf7b1a96.svg\";"],"sourceRoot":""}